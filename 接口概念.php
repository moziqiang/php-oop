<?php


//**接口**：interface，与类**类似**，专门用来规范一些共性类必须实现的方法
//
//* 接口不是类，但是与类有类似的结构
//* 接口不能实例化，类可以**实现**接口


// 结构

interface name{}

class myclass implements name{}

//作用 接口是用来规范项目体系，提供一些必须的行为规范的

//示例

//接口定义：使用interface关键字，后跟接口名字（与类结构一样）

interface Human{}

//接口不是类，不可以被实例化

//$n = new  Human(); # 致命错误，接口不能被实例化

//接口实现：接口是用来规范类必须完成的事情，所以接口只能被类实现：implements

class man implements Human{}




//总结

//1、接口是一个与类相似的结构，目的是为了规范一些类的必要的行为
//
//2、接口不是类，类只能实现接口
//
//3、接口会使得项目的开发变得不那么灵活，所以选择性使用接口
//
//* 小型项目：接口的增加会导致PHP的灵活性和快捷性受阻，因此很少使用接口
//* 大型项目：接口的增加会很好的规范团队的协作，比较多用接口
//


