<?php
//**静态延迟绑定**：static，即在类内部用来代表类本身的关键字部分不是在类编译时固定好，而是当方法被访问时动态的选择来访者所属的类
//
//* 静态延迟绑定就是利用`static`关键字代替静态绑定self（静态绑定），静态延迟绑定需要使用到静态成员的重写
//* 静态延迟绑定是为了明确访问的主体：类
//
//
//

//> 步骤
//
//1、要访问的内容为静态成员（或者类常量）
//
//2、需要动态确定访问者而不是固定死
//
//3、使用静态延迟绑定


//1、静态延迟绑定：使用static关键字代替self进行类成员访问

#父类
class human{
    public static $name = 'human';

    public static function showname(){

        #静态绑定

        echo self::$name;

        #静态延迟绑定

        echo static :: $name,'<br/>';
    }
}

human::showname(); 	# 输出Human和Human（此时没子类的事儿）


//2、静态延迟绑定一定是通过继承后的子类来进行访问才有效果

#子类

class man extends human{

    #重写父类静态属性
    public static $name = 'man';

}

#子类访问

man::showname();

//小结
//1、静态延迟绑定是指通过static关键字进行类静态成员的访问，是指在被访问时才决定到底使用哪个类
//
//2、静态延迟绑定对比的是静态绑定self
//
//3、静态延迟绑定的意义是用来保证访问的静态成员是根据调用类的不同而选择不同的表现


