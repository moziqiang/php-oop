<?php
//**封装**：字面意思就是将内容装到某个容器中，并进行密封保存。在面向对象思想中，封装指将`数据`和对`数据的操作`捆绑到一起，形成对外界的隐蔽，同时对外提供可以操作的`接口`。
//* 数据：即要操作的数据，在面向对象的具体体现就是类成员**属性**（属性和静态属性）和类常量，这些都是在类的内部定义的用来保存数据的
//
//* 数据的操作：即数据加工过程，在面向对象的具体体现就是**方法**，内部定义业务逻辑对数据进行加工处理。
//
//* 捆绑到一起：即使用类结构{}将属性、类常量和方法存放到一起，成为一个整体
//


# 捆绑内容到一起，形成对外界隐蔽的整体
class Saler{
    # 数据：属性和类常量保存
    const ALLOW = true;
    private static $count = 0;

    private $money = 0;
    # 数据操作
    public function getmoney(){
        return $this->money;
    }
}

#外部调用

#实例化类

$some = new Saler();
#用变量保存返回值

$money = $some -> getmoney();

echo $money;

//1、封装是从对象实体抽象形成类的过程
//
//2、封装的目的是让使用者只知道类能做什么，而不知道怎么做的
//
//3、封装特性也明确了类与对象的职责：类负责处理业务逻辑，对象只要调用实现